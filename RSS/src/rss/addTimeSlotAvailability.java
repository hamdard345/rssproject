package rss;

import java.sql.ResultSet;
import javax.swing.JFrame;
import net.proteanit.sql.DbUtils;

/**
 * This is the addTimeSlotAvailability class. It allows the user to add a new appointment to the database.
 * 
 * @author Spaced
 */
public class addTimeSlotAvailability extends javax.swing.JFrame {

    /**
     * Creates new form addTimeSlotAvailability
     */
    public addTimeSlotAvailability() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        timetbl = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        cswtbl = new javax.swing.JTable();
        loadbtn = new javax.swing.JButton();
        loadcwbtn = new javax.swing.JButton();
        cwidfld = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        timeslotfld = new javax.swing.JTextField();
        addbtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        timetbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        timetbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timetblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(timetbl);

        cswtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        cswtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cswtblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cswtbl);

        loadbtn.setText("Refresh Available Time Slots");
        loadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadbtnActionPerformed(evt);
            }
        });

        loadcwbtn.setText("Refresh Available Case Workers");
        loadcwbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadcwbtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Case Worker ID");

        jLabel2.setText("Time Slot ID");

        addbtn.setText("Add Availability");
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });

        backBtn.setText("Main Menue");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loadcwbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 511, Short.MAX_VALUE))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loadbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cwidfld, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(126, 126, 126)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addbtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(timeslotfld, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadcwbtn)
                    .addComponent(loadbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cwidfld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(timeslotfld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addbtn)
                    .addComponent(backBtn))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This is the load time slots method. It loads a list of available time slots from the database.
     * 
     * @param evt the action event
     */
    private void loadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadbtnActionPerformed
        rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadTimeSlots();
        timetbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_loadbtnActionPerformed

    /**
     * This is the load caseworkers method. It loads a list of caseworkers from the database.
     * 
     * @param evt the action event
     */
    private void loadcwbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadcwbtnActionPerformed
        rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadCaseWorker();
        cswtbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_loadcwbtnActionPerformed

    /**
     * This is the select time slot method. It allows the user to select entries from the time slot table.
     * 
     * @param evt the mouse event
     */
    private void timetblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timetblMouseClicked
        Integer row= timetbl.getSelectedRow();
        timeslotfld.setText(timetbl.getModel().getValueAt(row, 0).toString());
    }//GEN-LAST:event_timetblMouseClicked

    /**
     * This is the select caseworker method. It allows the user to select entries from the caseworker table.
     * 
     * @param evt the mouse event
     */
    private void cswtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cswtblMouseClicked
        Integer row= cswtbl.getSelectedRow();
        cwidfld.setText(cswtbl.getModel().getValueAt(row, 0).toString());
    }//GEN-LAST:event_cswtblMouseClicked

    
    /**
     * This is the add appointment method. It adds a new appointment to the database.
     * 
     * @param evt the action event
     */
    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
         Appointment ap= new Appointment();
       Integer i=null;
       Integer cwid=Integer.parseInt(cwidfld.getText());
       ap.setCwID(cwid);
       Integer tsid= Integer.parseInt(timeslotfld.getText());
       ap.setTimeSlotID(tsid);
       rssDatabase rs= new rssDatabase();
       rs.insertap(ap);
    }//GEN-LAST:event_addbtnActionPerformed

    /**
     * This is the back method. It returns the user to the main menu.
     * 
     * @param evt the action event
     */
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        MainMenue M = new MainMenue();
        this.dispose();
        M.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbtn;
    private javax.swing.JButton backBtn;
    public javax.swing.JTable cswtbl;
    private javax.swing.JTextField cwidfld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton loadbtn;
    private javax.swing.JButton loadcwbtn;
    private javax.swing.JTextField timeslotfld;
    public javax.swing.JTable timetbl;
    // End of variables declaration//GEN-END:variables
}
