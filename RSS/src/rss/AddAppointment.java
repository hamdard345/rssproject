package rss;

import java.sql.ResultSet;
import javax.swing.JFrame;
import net.proteanit.sql.DbUtils;

/**
 * This is the AddAppointment class. It adds an appointment to the database
 * 
 * @author Spaced
 */
public class AddAppointment extends javax.swing.JFrame {

    /**
     * Creates new form addAppointment
     */
    public AddAppointment() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        categorybox = new javax.swing.JComboBox<String>();
        jScrollPane1 = new javax.swing.JScrollPane();
        appointmentTbl = new javax.swing.JTable();
        appointmentloadbtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        caseTbl = new javax.swing.JTable();
        caseloadbtn = new javax.swing.JButton();
        appidfld = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        caseidfld = new javax.swing.JTextField();
        schedulebtn = new javax.swing.JButton();
        addcasebtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Category");

        categorybox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "housing", "debt", "benefit", "employment" }));

        appointmentTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        appointmentTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                appointmentTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(appointmentTbl);

        appointmentloadbtn.setText("Load List of Available Appointments");
        appointmentloadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appointmentloadbtnActionPerformed(evt);
            }
        });

        caseTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        caseTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                caseTblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(caseTbl);

        caseloadbtn.setText("Load List of Cases");
        caseloadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caseloadbtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Select an appointment from the table above");

        jLabel2.setText("Select a case from the table above");

        caseidfld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caseidfldActionPerformed(evt);
            }
        });

        schedulebtn.setText("Schedule Appointment");
        schedulebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schedulebtnActionPerformed(evt);
            }
        });

        addcasebtn1.setText("Main Menue");
        addcasebtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcasebtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1394, Short.MAX_VALUE)
                    .addComponent(caseloadbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(schedulebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(appointmentloadbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(categorybox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(appidfld, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(172, 172, 172)
                                .addComponent(caseidfld, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(addcasebtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 1365, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addcasebtn1, appointmentloadbtn, categorybox});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addcasebtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(categorybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(appointmentloadbtn)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3))
                    .addComponent(appidfld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(caseloadbtn)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(caseidfld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(schedulebtn)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This is the appointment load method. It loads a list of appointments directly from the database.
     * 
     * @param evt the action event
     */
    private void appointmentloadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appointmentloadbtnActionPerformed
        rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.findappointment(categorybox.getSelectedItem().toString());
        appointmentTbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_appointmentloadbtnActionPerformed

    /**
     * This is the case load method. It loads a list of cases directly from the database.
     * 
     * @param evt the action event
     */
    private void caseloadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caseloadbtnActionPerformed
        rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.findcase(categorybox.getSelectedItem().toString());
        caseTbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_caseloadbtnActionPerformed

    private void caseidfldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caseidfldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_caseidfldActionPerformed

    /**
     * This is the add appointment method. It adds a new appointment with a new app id and case id to the database.
     * 
     * @param evt the action event
     */
    private void schedulebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schedulebtnActionPerformed
        Appointment ap = new Appointment();
        int appid = Integer.parseInt(appidfld.getText());
        int caseid = Integer.parseInt(caseidfld.getText());
        ap.setAppId(appid);
        ap.setCaseID(caseid);
        rssDatabase rs = new rssDatabase();
        rs.scheduleap(ap);
    }//GEN-LAST:event_schedulebtnActionPerformed

    /**
     * This is the back method. It returns the user back to the main menu.
     * 
     * @param evt the action event
     */
    private void addcasebtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcasebtn1ActionPerformed

        MainMenue M = new MainMenue();
        this.dispose();
        M.setVisible(true);

    }//GEN-LAST:event_addcasebtn1ActionPerformed

    /**
     * This is the select appointment method. It allows the user to select an entry in the appointment table and edit it.
     * 
     * @param evt the mouse event 
     */
    private void appointmentTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_appointmentTblMouseClicked
       Integer row= appointmentTbl.getSelectedRow();
      appidfld.setText(appointmentTbl.getModel().getValueAt(row, 0).toString());
    }//GEN-LAST:event_appointmentTblMouseClicked

    /**
     * This is the select case method. It allows the user to select an entry in the case table and edit it.
     * 
     * @param evt the mouse event
     */
    private void caseTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_caseTblMouseClicked
      
               Integer row= caseTbl.getSelectedRow();
      caseidfld.setText(caseTbl.getModel().getValueAt(row, 0).toString());
    }//GEN-LAST:event_caseTblMouseClicked



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addcasebtn1;
    private javax.swing.JTextField appidfld;
    public javax.swing.JTable appointmentTbl;
    private javax.swing.JButton appointmentloadbtn;
    private javax.swing.JTable caseTbl;
    private javax.swing.JTextField caseidfld;
    private javax.swing.JButton caseloadbtn;
    private javax.swing.JComboBox<String> categorybox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton schedulebtn;
    // End of variables declaration//GEN-END:variables
}
//End of AddAppointment class
