package rss;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 * This is the MainMenu class. It is the menu that the user will interact with while running the application.
 * 
 * @author Spaced
 */
public class MainMenue extends javax.swing.JFrame {

    /**
     * Creates new form MainMenue
     */
    rssDatabase rsj= new rssDatabase();
    public MainMenue() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        todaytable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        addCaseWorker = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        addclientmenu = new javax.swing.JMenuItem();
        editclientmenu = new javax.swing.JMenuItem();
        removeclientmenu = new javax.swing.JMenuItem();
        viewallclientsmenu = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        addtimemenu = new javax.swing.JMenuItem();
        cwtimemenu = new javax.swing.JMenuItem();
        viewtimemenu = new javax.swing.JMenuItem();
        bookappmenu = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        addcasemenu = new javax.swing.JMenuItem();
        viewcasesmenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1650, 1080));

        todaytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(todaytable);

        jButton1.setText("view Todays appointment");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("CaseWorker");

        addCaseWorker.setText("Add New Case Worker");
        addCaseWorker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCaseWorkerActionPerformed(evt);
            }
        });
        jMenu1.add(addCaseWorker);

        jMenuItem2.setText("Edit Case Worker Details");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Remove Case Worker");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem1.setText("view all Case worker");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Client");

        addclientmenu.setText("Add a New Client");
        addclientmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addclientmenuActionPerformed(evt);
            }
        });
        jMenu2.add(addclientmenu);

        editclientmenu.setText("Edit Client Details");
        editclientmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editclientmenuActionPerformed(evt);
            }
        });
        jMenu2.add(editclientmenu);

        removeclientmenu.setText("Remove a Client");
        removeclientmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeclientmenuActionPerformed(evt);
            }
        });
        jMenu2.add(removeclientmenu);

        viewallclientsmenu.setText("View All Clients");
        viewallclientsmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewallclientsmenuActionPerformed(evt);
            }
        });
        jMenu2.add(viewallclientsmenu);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Appointment");

        jMenuItem9.setText("Add New Appointment");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem10.setText("Cancel Appointment");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem11.setText("Reschedual Appointment");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);

        jMenuItem12.setText("add appointment notes ");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem12);

        jMenuItem6.setText("CloseCase");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuItem3.setText("View All Appointments");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Time Slot");

        addtimemenu.setText("Add New Time Slot");
        addtimemenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtimemenuActionPerformed(evt);
            }
        });
        jMenu4.add(addtimemenu);

        cwtimemenu.setText("Add Case Worker Availability");
        cwtimemenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cwtimemenuActionPerformed(evt);
            }
        });
        jMenu4.add(cwtimemenu);

        viewtimemenu.setText("View All Time Slots");
        viewtimemenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewtimemenuActionPerformed(evt);
            }
        });
        jMenu4.add(viewtimemenu);

        bookappmenu.setText("View All Available Appointment Slots");
        bookappmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookappmenuActionPerformed(evt);
            }
        });
        jMenu4.add(bookappmenu);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Cases");

        addcasemenu.setText("Add New Case");
        addcasemenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcasemenuActionPerformed(evt);
            }
        });
        jMenu5.add(addcasemenu);

        viewcasesmenu.setText("View All Cases");
        viewcasesmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewcasesmenuActionPerformed(evt);
            }
        });
        jMenu5.add(viewcasesmenu);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 1356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1356, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jScrollPane1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addGap(194, 194, 194))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This is the load today appointments method. It loads the appointments that are supposed to happen today in real time.
     * 
     * @param evt the action event
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
            //rssDatabase rsj= new rssDatabase();
            ResultSet rs =rsj.loadtoadysappointment(); 
        try {
            if (!rs.next()){
                 JOptionPane.showMessageDialog(null, "there are no appointments for today");
            }
            else{todaytable.setModel(DbUtils.resultSetToTableModel(rs));}
        } catch (SQLException ex) {
            Logger.getLogger(MainMenue.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * This is the edit case worker method. It opens the editCaseWorker class.
     * 
     * @param evt the action event
     */
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       editCaseWorker ed= new editCaseWorker();
       ed.setVisible(true);
       this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadCaseWorker();
        ed.cswtable.setModel(DbUtils.resultSetToTableModel(rs));

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * This is the remove case worker method. It opens the RemoveCaseWorker class.
     * 
     * @param evt the action event
     */
    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
         RemoveCaseWorker ed= new RemoveCaseWorker();
       ed.setVisible(true);
       this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadCaseWorker();
        ed.cswtable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    /**
     * This is the add case worker method. It opens the addcaseworker class.
     * 
     * @param evt the action event
     */
    private void addCaseWorkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCaseWorkerActionPerformed
        addcaseworker ad = new addcaseworker();
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addCaseWorkerActionPerformed

    /**
     * This is the all caseworker method. It opens the allCaseworker class.
     * 
     * @param evt the action event
     */
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        allCaseworker al= new allCaseworker();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadCaseWorker();
        al.cswtable.setModel(DbUtils.resultSetToTableModel(rs));
        al.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * This is the view all clients method. It opens the allClients class.
     * 
     * @param evt the action event
     */
    private void viewallclientsmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewallclientsmenuActionPerformed
        allClients al= new allClients();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadclients();
        al.clienttable.setModel(DbUtils.resultSetToTableModel(rs));
        al.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_viewallclientsmenuActionPerformed

    /**
     * This is the add client method. It opens the addclient class.
     * 
     * @param evt the action event
     */
    private void addclientmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addclientmenuActionPerformed
        addclient ad = new addclient();
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addclientmenuActionPerformed

    /**
     * This is the edit client method. It opens the editClient class.
     * 
     * @param evt the action event
     */
    private void editclientmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editclientmenuActionPerformed
        editClient ed = new editClient();
        ed.setVisible(true);
        this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadclients();
        ed.clienttable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_editclientmenuActionPerformed

    /**
     * This is the remove client method. It opens the removeClient class.
     * 
     * @param evt the action event
     */
    private void removeclientmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeclientmenuActionPerformed
        removeClient del = new removeClient();
        del.setVisible(true);
        this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadclients();
        del.clienttable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_removeclientmenuActionPerformed

    /**
     * This is the add timeslot method. It opens the addTimeSlot class.
     * 
     * @param evt the action event
     */
    private void addtimemenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtimemenuActionPerformed
        addTimeSlot ad = new addTimeSlot();
        ad.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addtimemenuActionPerformed

    /**
     * This is the view all timeslots method. It opens the alltimeslots class.
     * 
     * @param evt the action event
     */
    private void viewtimemenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewtimemenuActionPerformed
        alltimeslots time = new alltimeslots();
        time.setVisible(true);
        this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadTimeSlots();
        time.timetbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_viewtimemenuActionPerformed

    /**
     * This is the add timeslot availibility method. It opens the addTimeSlotAvailability class.
     * 
     * @param evt the action event
     */
    private void cwtimemenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cwtimemenuActionPerformed
        addTimeSlotAvailability ad = new addTimeSlotAvailability();
        ad.setVisible(true);
        this.dispose();
        //rssDatabase rsj = new rssDatabase();
        ResultSet rs = rsj.loadTimeSlots();
        ad.timetbl.setModel(DbUtils.resultSetToTableModel(rs));
        //rssDatabase rsj2 = new rssDatabase();
        ResultSet rs2 = rsj.loadCaseWorker();
        ad.cswtbl.setModel(DbUtils.resultSetToTableModel(rs2));
    }//GEN-LAST:event_cwtimemenuActionPerformed

    /**
     * This is the booked timeslots method. It opens the allBookedTimeSlots class.
     * 
     * @param evt the action event
     */
    private void bookappmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookappmenuActionPerformed
        allBookedTimeSlots book = new allBookedTimeSlots();
        book.setVisible(true);
        this.dispose();
        //rssDatabase rsj = new rssDatabase();
        ResultSet rs = rsj.loadavailableappointment();
        book.timetbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_bookappmenuActionPerformed

    /**
     * This is the add case method. It opens the AddCase class.
     * 
     * @param evt the action event
     */
    private void addcasemenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcasemenuActionPerformed
        AddCase ad = new AddCase();
        ad.setVisible(true);
        this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadclients();
        ad.clientTbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_addcasemenuActionPerformed

    /**
     * This is the all cases method. It opens the allCases class.
     * 
     * @param evt the action event
     */
    private void viewcasesmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewcasesmenuActionPerformed
        allCases view = new allCases();
        view.setVisible(true);
        this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadCases();
        view.casetbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_viewcasesmenuActionPerformed

    /**
     * This is the add appointment method. It opens the AddAppointment class.
     * 
     * @param evt the action event
     */
    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
       
        AddAppointment apn = new AddAppointment();
       apn.setVisible(true);
       this.dispose();
       
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    /**
     * This is the cancel appointment method. It opens the CancelAppointment class.
     * 
     * @param evt the action event
     */
    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        // TODO add your handling code here:
        CancelAppointment cap = new CancelAppointment();
        cap.setVisible(true);
        this.dispose();
         //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadbookedappointment();
        cap.bookedTbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    /**
     * This is the reschedule appointment method. It opens the ReschedualeAppointment class.
     * 
     * @param evt the action event
     */
    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        // TODO add your handling code here:
        ReschedualeAppointment ra = new ReschedualeAppointment();
        ra.setVisible(true);
        this.dispose();
         //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadbookedappointment();
        ra.bookedTbl.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    /**
     * This is the add case notes method. It opens the AddCaseNotes class.
     * 
     * @param evt the action event
     */
    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        // TODO add your handling code here:
        AddCaseNotes adcn = new AddCaseNotes();
        adcn.setVisible(true);
        this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadbookedappointment();
        adcn.bookedTbl1.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    /**
     * This is the close case method. It opens the CloseCase class.
     * 
     * @param evt the action event
     */
    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        CloseCase cc = new CloseCase();
        cc.setVisible(true);
        this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadbookedappointment();
        cc.bookedTbl1.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * This is the all appointments method. It opens the AllAppointments class.
     * 
     * @param evt the action event
     */
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        AllAppointments all = new AllAppointments();
        all.setVisible(true);
        this.dispose();
        //rssDatabase rsj= new rssDatabase();
        ResultSet rs =rsj.loadbookedappointment();
        all.bookedTbl.setModel(DbUtils.resultSetToTableModel(rs));
    
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem addCaseWorker;
    private javax.swing.JMenuItem addcasemenu;
    private javax.swing.JMenuItem addclientmenu;
    private javax.swing.JMenuItem addtimemenu;
    private javax.swing.JMenuItem bookappmenu;
    private javax.swing.JMenuItem cwtimemenu;
    private javax.swing.JMenuItem editclientmenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem removeclientmenu;
    private javax.swing.JTable todaytable;
    private javax.swing.JMenuItem viewallclientsmenu;
    private javax.swing.JMenuItem viewcasesmenu;
    private javax.swing.JMenuItem viewtimemenu;
    // End of variables declaration//GEN-END:variables
}
